const config = require ('../../config');
const utils = require ('../utils');
const breakpoints = config.grid.breakpoints;
const columns = config.grid.columns;
const destinationFile = config.grid.jsDestination;

const getBreakpoints = (bps) => {
  return [''].concat(Object.keys(bps).map((c) => {
    return bps[c];
  }));
}

const getSizes = (denominators) => {
  return denominators.reduce((previous, denominator) => {
    var sizes = [];
    for (var numerator = 1; numerator <= denominator; numerator++) {
      var size = `${numerator}-of-${denominator}`;
      sizes.push(size);
    }
    return previous.concat(sizes);
  }, []).concat(['']);
};

const getContent = () => {
  var data = {
    breakpoints: getBreakpoints(breakpoints),
    sizes: getSizes(columns)
  };

  var bps = data.breakpoints.reduce((previous, breakpoint, i) => {
    var seperator = i === 0 ? '' : ','
    return `${previous}${seperator}'${breakpoint}'`
  }, '');

  var sizes = data.sizes.reduce((previous, size, i) => {
    var seperator = i === 0 ? '' : ','
    return `${previous}${seperator}'${size}'`
  }, '');

  return `// this file is generated by script utils/widths,
// change the script rather than this file! */
module.exports = { breakpoints: [${bps}], sizes: [${sizes}] }`;
}

module.exports.build = () => {
  utils.writeFile(destinationFile, getContent())
  .then(() => {
    console.log(`built ${destinationFile} file!`);
  }).catch((err) => {
    console.log(err.message);
    console.log(err.stack);
  });
};
